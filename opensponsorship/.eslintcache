[{"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/index.js":"1","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/reportWebVitals.js":"2","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/App.js":"3","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/services/productService.js":"4","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/ProfileList.js":"5","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/services/profileService.js":"6","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/ModalMain.js":"7","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/Summary.js":"8","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/Basic.js":"9","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/About.js":"10"},{"size":659,"mtime":1612191872335,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1612127364204,"results":"13","hashOfConfig":"12"},{"size":1478,"mtime":1612199154808,"results":"14","hashOfConfig":"12"},{"size":333,"mtime":1612140311306,"results":"15","hashOfConfig":"12"},{"size":1397,"mtime":1612194567973,"results":"16","hashOfConfig":"12"},{"size":473,"mtime":1612193008056,"results":"17","hashOfConfig":"12"},{"size":1527,"mtime":1612205158273,"results":"18","hashOfConfig":"12"},{"size":1267,"mtime":1612202750610,"results":"19","hashOfConfig":"12"},{"size":1278,"mtime":1612204937301,"results":"20","hashOfConfig":"12"},{"size":1136,"mtime":1612202823404,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"cbtial",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/index.js",[],["46","47"],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/reportWebVitals.js",[],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/App.js",["48","49"],"import React, { useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { AgGridReact } from 'ag-grid-react';\nimport profileService from \"./services/profileService\";\nimport ProfileList from \"./ProfileList\";\nimport ModalMain from './ModalMain'\n\nconst App = () => {\n  const [rowData, setRowData] = useState([]);\n  const [gridApi, setGridApi] = useState(null);\n  const [adding, setAdding] = useState(false);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  useEffect(() => {\n    getGridData();\n  }, []);\n\n  const getGridData = () => {\n    profileService.getAll().then((res) => {setRowData(res); console.log(res);});\n  }\n\n  const setGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n    console.log(params);\n  }\n\n  useEffect(() => {\n    if(gridApi !== null) {\n      var data = rowData;\n      gridApi.setRowData(data);\n    }   \n  }, [rowData]);\n\n  return (\n    <div className=\"App\">\n        <h3>Athlete profiles:</h3>\n        <div className = \"grid\">\n          <ProfileList\n            gridApi={gridApi}\n            getGridData={getGridData}\n            onGridReady={setGridReady}\n            gridColumnApi={gridColumnApi}\n            rowData = {rowData}\n          />\n        </div>\n        <Button onClick={() => setAdding(true)}>Add Athlete</Button>\n        <ModalMain\n          show={adding}\n          closeModal={() => setAdding(false)}\n          />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/services/productService.js",["50"],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/ProfileList.js",["51","52","53","54"],"import React, { useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { AgGridReact } from 'ag-grid-react';\nimport profileService from \"./services/profileService\";\nimport { AgGridColumn } from \"ag-grid-react/lib/agGridColumn\";\nimport { PropTypes } from \"prop-types\";\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nconst ProfileList = (props) => {\n\nconsole.log(props.rowData);  \n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <div className=\"grid-wrapper\">\n        <div\n          id=\"myGrid\"\n          style={{\n            boxSizing: \"border-box\",\n            height: \"100%\",\n            width: \"100%\"\n          }}\n          className=\"ag-theme-balham\"\n        >\n        <AgGridReact\n            rowData={props.rowData}\n            onGridReady={props.onGridReady}\n            domLayout={'autoHeight'}\n        >\n            <AgGridColumn headerName=\"Athlete\" field=\"name\"></AgGridColumn>\n            <AgGridColumn headerName=\"Sport\" field=\"sport\"></AgGridColumn>\n            <AgGridColumn headerName=\"Team\" field=\"team\"></AgGridColumn>\n            <AgGridColumn headerName=\"Description\" field=\"description\"></AgGridColumn>\n        </AgGridReact>\n    </div>\n    </div>\n    </div>\n  );\n}\n\nProfileList.propTypes = {\n    getGridData: PropTypes.func,\n}\n\nexport default ProfileList;\n","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/services/profileService.js",["55"],"import axios from 'axios';\n\nexport default {\n  getAll: async () => {\n    let res = await axios.get(`/api/profile`);\n    return res.data || [];\n  },\n  create: async (product) => {\n    await axios.post('/api/profile', product).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n  },\n  update: async (product) => {\n    await axios.put('/api/profile', product).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n  }\n}","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/ModalMain.js",["56","57","58","59","60","61"],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/Summary.js",["62","63"],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/Basic.js",[],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/About.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":33,"column":6,"nodeType":"74","endLine":33,"endColumn":15,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":3,"column":1,"nodeType":"78","endLine":15,"endColumn":2},{"ruleId":"68","severity":1,"message":"79","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"80","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"81","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"82","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":22},{"ruleId":"76","severity":1,"message":"77","line":3,"column":1,"nodeType":"78","endLine":20,"endColumn":2},{"ruleId":"68","severity":1,"message":"79","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"80","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"81","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":46,"column":13,"nodeType":"85","messageId":"86","endLine":46,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":51,"column":13,"nodeType":"85","messageId":"86","endLine":51,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":56,"column":13,"nodeType":"85","messageId":"86","endLine":56,"endColumn":15},{"ruleId":"68","severity":1,"message":"87","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":12},{"ruleId":"68","severity":1,"message":"88","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":14},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'AgGridReact' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gridApi'. Either include it or remove the dependency array.","ArrayExpression",["91"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'profileService' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [gridApi, rowData]",{"range":"94","text":"95"},[918,927],"[gridApi, rowData]"]