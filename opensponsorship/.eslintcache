[{"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/index.js":"1","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/reportWebVitals.js":"2","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/App.js":"3","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/services/productService.js":"4","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/ProfileList.js":"5","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/services/profileService.js":"6","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/ModalMain.js":"7","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/Summary.js":"8","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/Basic.js":"9","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/About.js":"10"},{"size":659,"mtime":1612191872335,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1612127364204,"results":"13","hashOfConfig":"12"},{"size":1478,"mtime":1612199154808,"results":"14","hashOfConfig":"12"},{"size":333,"mtime":1612140311306,"results":"15","hashOfConfig":"12"},{"size":1397,"mtime":1612194567973,"results":"16","hashOfConfig":"12"},{"size":473,"mtime":1612193008056,"results":"17","hashOfConfig":"12"},{"size":1527,"mtime":1612205158273,"results":"18","hashOfConfig":"12"},{"size":1267,"mtime":1612202750610,"results":"19","hashOfConfig":"12"},{"size":1278,"mtime":1612204937301,"results":"20","hashOfConfig":"12"},{"size":1136,"mtime":1612202823404,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"cbtial",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/index.js",[],["48","49"],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/reportWebVitals.js",[],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/App.js",["50","51"],"import React, { useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { AgGridReact } from 'ag-grid-react';\nimport profileService from \"./services/profileService\";\nimport ProfileList from \"./ProfileList\";\nimport ModalMain from './ModalMain'\n\nconst App = () => {\n  const [rowData, setRowData] = useState([]);\n  const [gridApi, setGridApi] = useState(null);\n  const [adding, setAdding] = useState(false);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  useEffect(() => {\n    getGridData();\n  }, []);\n\n  const getGridData = () => {\n    profileService.getAll().then((res) => {setRowData(res); console.log(res);});\n  }\n\n  const setGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n    console.log(params);\n  }\n\n  useEffect(() => {\n    if(gridApi !== null) {\n      var data = rowData;\n      gridApi.setRowData(data);\n    }   \n  }, [rowData]);\n\n  return (\n    <div className=\"App\">\n        <h3>Athlete profiles:</h3>\n        <div className = \"grid\">\n          <ProfileList\n            gridApi={gridApi}\n            getGridData={getGridData}\n            onGridReady={setGridReady}\n            gridColumnApi={gridColumnApi}\n            rowData = {rowData}\n          />\n        </div>\n        <Button onClick={() => setAdding(true)}>Add Athlete</Button>\n        <ModalMain\n          show={adding}\n          closeModal={() => setAdding(false)}\n          />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/services/productService.js",["52"],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/ProfileList.js",["53","54","55","56"],"import React, { useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { AgGridReact } from 'ag-grid-react';\nimport profileService from \"./services/profileService\";\nimport { AgGridColumn } from \"ag-grid-react/lib/agGridColumn\";\nimport { PropTypes } from \"prop-types\";\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nconst ProfileList = (props) => {\n\nconsole.log(props.rowData);  \n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <div className=\"grid-wrapper\">\n        <div\n          id=\"myGrid\"\n          style={{\n            boxSizing: \"border-box\",\n            height: \"100%\",\n            width: \"100%\"\n          }}\n          className=\"ag-theme-balham\"\n        >\n        <AgGridReact\n            rowData={props.rowData}\n            onGridReady={props.onGridReady}\n            domLayout={'autoHeight'}\n        >\n            <AgGridColumn headerName=\"Athlete\" field=\"name\"></AgGridColumn>\n            <AgGridColumn headerName=\"Sport\" field=\"sport\"></AgGridColumn>\n            <AgGridColumn headerName=\"Team\" field=\"team\"></AgGridColumn>\n            <AgGridColumn headerName=\"Description\" field=\"description\"></AgGridColumn>\n        </AgGridReact>\n    </div>\n    </div>\n    </div>\n  );\n}\n\nProfileList.propTypes = {\n    getGridData: PropTypes.func,\n}\n\nexport default ProfileList;\n","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/services/profileService.js",["57"],"import axios from 'axios';\n\nexport default {\n  getAll: async () => {\n    let res = await axios.get(`/api/profile`);\n    return res.data || [];\n  },\n  create: async (product) => {\n    await axios.post('/api/profile', product).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n  },\n  update: async (product) => {\n    await axios.put('/api/profile', product).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n  }\n}","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/ModalMain.js",["58","59","60","61","62","63"],"import React, { useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { Modal } from 'react-bootstrap'\nimport Basic from \"./Basic\";\nimport About from \"./About\";\nimport Summary from \"./Summary\";\nimport { useForm, useStep } from \"react-hooks-helper\";\n\nconst ModalMain = (props) => {\n\n  const steps = [\n    { id: \"basic\" },\n    { id: \"about\" },\n    { id: \"summary\" },\n  ];\n\n  const defaultData = {\n    name: \"\",\n    sport: \"\",\n    gender: \"\",\n    dateOfBirth: \"\",\n    location: \"\",\n    team: \"\",\n    description: \"\"\n  };\n\n  const [formData, setForm] = useForm(defaultData);\n  const { step, navigation } = useStep({ initialStep: 0, steps });\n  const { id } = step;\n\n  const propsToPass = { formData, setForm, navigation };\n\n    return(\n        <div>\n      <Modal\n        size=\"lg\"\n        show={props.show}\n        onHide={props.closeModal}\n        aria-labelledby=\"example-modal-sizes-title-lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n            Add Athlete Information\n          </Modal.Title>\n        </Modal.Header>\n        {id == \"basic\" &&\n        <Modal.Body>\n          <Basic {...propsToPass} />\n        </Modal.Body>\n        }\n        {id == \"summary\" &&\n        <Modal.Body>\n          <Summary {...propsToPass} />\n        </Modal.Body>\n        }\n        {id == \"about\" &&\n        <Modal.Body>\n          <About {...propsToPass} />\n        </Modal.Body>\n        }\n      </Modal>\n      </div>\n    );\n}\n\nexport default ModalMain;","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/Summary.js",["64","65"],"import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\nimport { form } from \"react-dom-factories\";\n\nconst Summary = ({ setForm, formData, navigation }) => {\n  const {\n    name,\n    sport,\n    gender,\n    dateOfBirth,\n    location,\n    team,\n    description\n  } = formData;\n  const { go } = navigation;\n\n  const submit = (formData) => {\n      console.log(formData);\n  }\n\n  return (\n    <div className=\"form\">\n      <h3>Review your data</h3>\n      <h4>\n        Basic Info:\n        <Button onClick={() => go(\"basic\")}>Edit</Button>\n      </h4>\n      <div>\n        {\" \"}\n        Name: {`${name}`},\n        <br />\n        Sport: {`${sport}`},\n        <br />\n        <div>Gender: {`${gender}`}</div>\n        <br />\n        <div>Date of birth: {`${dateOfBirth}`}</div>\n      </div>\n      <h4>\n        About athlete:\n        <Button onClick={() => go(\"about\")}>Edit</Button>\n      </h4>\n      <div>\n        Location: {`${location}`},\n        <br />\n        Team: {` ${team}`},\n        <br />\n        Description: {`${description}`},\n      </div>\n      <div>\n        <Button className='float-right' onClick={() => {submit(formData); go(\"basic\")}}>Submit</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;","/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/Basic.js",[],"/Users/mberger/Desktop/OpenSponsorship/opensponsorship/src/About.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":33,"column":6,"nodeType":"76","endLine":33,"endColumn":15,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":1,"nodeType":"80","endLine":15,"endColumn":2},{"ruleId":"70","severity":1,"message":"81","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"82","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"83","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":14},{"ruleId":"70","severity":1,"message":"84","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":3,"column":1,"nodeType":"80","endLine":20,"endColumn":2},{"ruleId":"70","severity":1,"message":"81","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"82","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"83","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":46,"column":13,"nodeType":"87","messageId":"88","endLine":46,"endColumn":15},{"ruleId":"85","severity":1,"message":"86","line":51,"column":13,"nodeType":"87","messageId":"88","endLine":51,"endColumn":15},{"ruleId":"85","severity":1,"message":"86","line":56,"column":13,"nodeType":"87","messageId":"88","endLine":56,"endColumn":15},{"ruleId":"70","severity":1,"message":"89","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":12},{"ruleId":"70","severity":1,"message":"90","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":14},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'AgGridReact' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gridApi'. Either include it or remove the dependency array.","ArrayExpression",["93"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'profileService' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Form' is defined but never used.","'form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [gridApi, rowData]",{"range":"96","text":"97"},[918,927],"[gridApi, rowData]"]